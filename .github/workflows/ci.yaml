name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  RUST_TOOLCHAIN: "1.84.1"
  RUST_TOOLCHAIN_RUSTFMT: nightly
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install "$RUST_TOOLCHAIN" --target ${{ matrix.target }}
          rustup override set "$RUST_TOOLCHAIN"

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: cargo build
        run: cargo build --all-targets --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: pdftrim-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/pdftrim
          if-no-files-found: error

  build-linux-cross:
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install "$RUST_TOOLCHAIN" --target ${{ matrix.target }}
          rustup override set "$RUST_TOOLCHAIN"

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - uses: cargo-bins/cargo-binstall@main

      - name: Install cross
        run: cargo binstall cross

      - name: cross build
        run: cross build --all-targets --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: pdftrim-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/pdftrim
          if-no-files-found: error

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install "$RUST_TOOLCHAIN" --target ${{ matrix.target }}
          rustup override set "$RUST_TOOLCHAIN"

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: cargo build
        run: cargo build --all-targets --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: pdftrim-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/pdftrim
          if-no-files-found: error

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install "$RUST_TOOLCHAIN" --target ${{ matrix.target }}
          rustup override set "$RUST_TOOLCHAIN"

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: cargo build
        run: cargo build --all-targets --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: pdftrim-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/pdftrim.exe
          if-no-files-found: error

  rustfmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install "$RUST_TOOLCHAIN_RUSTFMT" --component rustfmt
          rustup override set "$RUST_TOOLCHAIN_RUSTFMT"

      - name: cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install "$RUST_TOOLCHAIN" --component clippy
          rustup override set "$RUST_TOOLCHAIN"

      - uses: Swatinem/rust-cache@v2

      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings

  lockfile:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install "$RUST_TOOLCHAIN"
          rustup override set "$RUST_TOOLCHAIN"

      - name: Check if Cargo.lock is up-to-date
        run: cargo tree --depth 1 --no-dedupe --locked
